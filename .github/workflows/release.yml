# Releases a new version of the NuvlaEdge
# A new tag has to be manually trigger. After that, this workflow tests and validates the new release
# creating the release

name: "NuvlaEdge Release"

on:
  push:
    tags:
      - "v*"

jobs:
  build-package:


  unittests:
    name: 'Version Check'
    description: 'Checks the parsed version is > than the previous and forms the new one 
     formats into semver'
    runs-on: ubuntu-latest

    steps:
      - name: Get latest release/pre-release
        run: echo "Get Latest release"

      - name: Compare version and define output
        run: echo "Comparing version"

      - name: Output True for check version
        run: echo "Output Version check"

  release-package:
    name: 'Build and release code base'
    needs: check_version
    runs-on: ubuntu-latest

    steps:
      # ------------------------------------------------
      # Checkout and Setup Python
      # ------------------------------------------------
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Do not download forked repos atm

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      # ------------------------------------------------
      # Setup Poetry with caches
      # ------------------------------------------------
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-${{ runner.os }}-0

      - name: Setup poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # ------------------------------------------------
      # Setup environment
      # ------------------------------------------------
